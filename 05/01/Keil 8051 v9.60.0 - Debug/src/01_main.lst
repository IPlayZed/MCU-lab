C51 COMPILER V9.60.0.0   01_MAIN                                                           10/05/2021 15:23:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 01_MAIN
OBJECT MODULE PLACED IN .\src\01_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\miclab\05\01\
                    -src\01_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) I
                    -NTVECTOR(0X0000) INTPROMOTE INCDIR(C:\miclab\05\01\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//De
                    -vice/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\01
                    -_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\01_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/01_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          #define ENABLE 0
  18          #define DISABLE 1
  19          #define VDD 3.3
  20          #define R_REF 10000
  21          #define ADC_DATA_MAX 4096
  22          #define SCALE VDD/ADC_DATA_MAX
  23          
  24          volatile uint16_t ADC0_data;
  25          uint16_t ADC0_data_temp = 0;
  26          float R_measure = 0;
  27          float Volts_temp = 0;
  28          
  29          
  30          //-----------------------------------------------------------------------------
  31          // SiLabs_Startup() Routine
  32          // ----------------------------------------------------------------------------
  33          // This function is called immediately after reset, before the initialization
  34          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  35          // useful place to disable the watchdog timer, which is enable by default
  36          // and may trigger before main() in some instances.
  37          //-----------------------------------------------------------------------------
  38          void SiLabs_Startup (void)
  39          {
  40   1        // $[SiLabs Startup]
  41   1        // [SiLabs Startup]$
  42   1      }
  43          
  44          //-----------------------------------------------------------------------------
  45          // main() Routine
  46          // ----------------------------------------------------------------------------
  47          float calculate_R(float V_out)
  48          {
  49   1        return (V_out*R_REF)/(VDD-V_out);
  50   1      }
  51          
  52          float to_Volts(uint16_t ADC_data)
C51 COMPILER V9.60.0.0   01_MAIN                                                           10/05/2021 15:23:18 PAGE 2   

  53          {
  54   1        return ADC_data*SCALE;
  55   1      }
  56          
  57          int main (void)
  58          {
  59   1        // Call hardware initialization routine
  60   1        enter_DefaultMode_from_RESET();
  61   1        
  62   1        while (1) 
  63   1        {
  64   2          // $[Generated Run-time code]
  65   2          // [Generated Run-time code]$
  66   2      
  67   2            IE_EA = ENABLE;
  68   2            ADC0_data_temp = ADC0_data;
  69   2            IE_EA = DISABLE;
  70   2      
  71   2            Volts_temp = to_Volts(ADC0_data_temp);
  72   2      
  73   2            R_measure = calculate_R(Volts_temp);
  74   2        }                             
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    136    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
