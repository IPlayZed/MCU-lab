C51 COMPILER V9.60.0.0   SZORGALMI_MAIN                                                    09/20/2021 23:16:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SZORGALMI_MAIN
OBJECT MODULE PLACED IN .\src\szorgalmi_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\minef\S
                    -implicityStudio\v5_workspace\szorgalmi\src\szorgalmi_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLO
                    -ATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\minef\SimplicityStudio\v5_work
                    -space\szorgalmi\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si8051Base;C:/SiliconLa
                    -bs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/C8051F850/inc) PRINT(.\src\szorgalmi_main.lst) COND PAGEWIDTH(
                    -120) PAGELENGTH(65) OBJECT(.\src\szorgalmi_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/szorgalmi_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_C8051F850_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          #include "IncludesBasics.h"
  17          #include "ButtonModes.h"
  18          
  19          extern U8 counter;
  20          // This could be volatile, but it is only read in the interrupt, so it is not
  21          // 100% necessary.
  22          BTN_MODE BTN0_mode = BTN0_MODE_15HZ;
  23          //-----------------------------------------------------------------------------
  24          // SiLabs_Startup() Routine
  25          // ----------------------------------------------------------------------------
  26          // This function is called immediately after reset, before the initialization
  27          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  28          // useful place to disable the watchdog timer, which is enable by default
  29          // and may trigger before main() in some instances.
  30          //-----------------------------------------------------------------------------
  31          void SiLabs_Startup (void)
  32          {
  33   1        // $[SiLabs Startup]
  34   1        // [SiLabs Startup]$
  35   1      }
  36          
  37          //-----------------------------------------------------------------------------
  38          // main() Routine
  39          // ----------------------------------------------------------------------------
  40          int main (void)
  41          {
  42   1        // Call hardware initialization routine
  43   1        enter_DefaultMode_from_RESET();
  44   1        
  45   1        while (1) 
  46   1        {
  47   2          // $[Generated Run-time code]
  48   2          // [Generated Run-time code]$
  49   2          if (BTN0 == ON) {
  50   3              // Wait time could be changed based on button mode.
  51   3              if (BTN0_mode == BTN0_MODE_100HZ) BTN0_mode = BTN0_MODE_15HZ;
C51 COMPILER V9.60.0.0   SZORGALMI_MAIN                                                    09/20/2021 23:16:47 PAGE 2   

  52   3              else BTN0_mode++;
  53   3              BTN0_set_TIMER01_0_TH0_val(BTN0_mode);
  54   3          }
  55   2          counter = 0;
  56   2        }                             
  57   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     29    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
