C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:36:10 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\mikrovez\02\0
                    -3\03\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DE
                    -BUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\mikrovez\02\03\03\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/80
                    -51/v4.2.1//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/C8051F850/inc)
                    - PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_C8051F850_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          typedef uint8_t U8;
  14          
  15          // USER PROTOTYPES
  16          // USER FUNCTIONS
  17          
  18          //==============================================================================
  19          // enter_DefaultMode_from_RESET
  20          //==============================================================================
  21          extern void
  22          enter_DefaultMode_from_RESET (void)
  23          {
  24   1        // $[Config Calls]
  25   1        WDT_0_enter_DefaultMode_from_RESET ();
  26   1        PORTS_1_enter_DefaultMode_from_RESET ();
  27   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  28   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  29   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  30   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  31   1        // [Config Calls]$
  32   1      
  33   1      }
  34          
  35          extern void
  36          WDT_0_enter_DefaultMode_from_RESET (void)
  37          {
  38   1        // $[Watchdog Timer Init Variable Declarations]
  39   1        uint32_t i;
  40   1        bool ea;
  41   1        // [Watchdog Timer Init Variable Declarations]$
  42   1      
  43   1        // $[WDTCN - Watchdog Timer Control]
  44   1        // Deprecated
  45   1        // [WDTCN - Watchdog Timer Control]$
  46   1      
  47   1        // $[WDTCN_2 - Watchdog Timer Control]
  48   1      
  49   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  50   1        WDTCN = 0xA5;
  51   1      
  52   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:36:10 PAGE 2   

  53   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  54   1          {
  55   2            NOP ();
  56   2          }
  57   1      
  58   1        // Disable WDT
  59   1        ea = IE_EA;
  60   1        IE_EA = 0;
  61   1        WDTCN = 0xDE;
  62   1        WDTCN = 0xAD;
  63   1        IE_EA = ea;
  64   1      
  65   1        // [WDTCN_2 - Watchdog Timer Control]$
  66   1      
  67   1      }
  68          
  69          extern void
  70          PORTS_1_enter_DefaultMode_from_RESET (void)
  71          {
  72   1        // $[P1 - Port 1 Pin Latch]
  73   1        // [P1 - Port 1 Pin Latch]$
  74   1      
  75   1        // $[P1MDOUT - Port 1 Output Mode]
  76   1        /***********************************************************************
  77   1         - P1.0 output is push-pull
  78   1         - P1.1 output is open-drain
  79   1         - P1.2 output is open-drain
  80   1         - P1.3 output is open-drain
  81   1         - P1.4 output is open-drain
  82   1         - P1.5 output is open-drain
  83   1         - P1.6 output is open-drain
  84   1         - P1.7 output is push-pull
  85   1         ***********************************************************************/
  86   1        P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
  87   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN
  88   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__PUSH_PULL;
  89   1        // [P1MDOUT - Port 1 Output Mode]$
  90   1      
  91   1        // $[P1MDIN - Port 1 Input Mode]
  92   1        // [P1MDIN - Port 1 Input Mode]$
  93   1      
  94   1        // $[P1SKIP - Port 1 Skip]
  95   1        // [P1SKIP - Port 1 Skip]$
  96   1      
  97   1        // $[P1MASK - Port 1 Mask]
  98   1        // [P1MASK - Port 1 Mask]$
  99   1      
 100   1        // $[P1MAT - Port 1 Match]
 101   1        // [P1MAT - Port 1 Match]$
 102   1      
 103   1      }
 104          
 105          extern void
 106          PBCFG_0_enter_DefaultMode_from_RESET (void)
 107          {
 108   1        // $[XBR0 - Port I/O Crossbar 0]
 109   1        // [XBR0 - Port I/O Crossbar 0]$
 110   1      
 111   1        // $[XBR1 - Port I/O Crossbar 1]
 112   1        // [XBR1 - Port I/O Crossbar 1]$
 113   1      
 114   1        // $[XBR2 - Port I/O Crossbar 2]
 115   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:36:10 PAGE 3   

 116   1         - Weak Pullups enabled 
 117   1         - Crossbar enabled
 118   1         ***********************************************************************/
 119   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 120   1        // [XBR2 - Port I/O Crossbar 2]$
 121   1      
 122   1        // $[PRTDRV - Port Drive Strength]
 123   1        // [PRTDRV - Port Drive Strength]$
 124   1      
 125   1      }
 126          
 127          extern void
 128          TIMER16_2_enter_DefaultMode_from_RESET (void)
 129          {
 130   1        // $[Timer Initialization]
 131   1        // Save Timer Configuration
 132   1        U8 TMR2CN_TR2_save;
 133   1        TMR2CN_TR2_save = TMR2CN & TMR2CN_TR2__BMASK;
 134   1        // Stop Timer
 135   1        TMR2CN &= ~(TMR2CN_TR2__BMASK);
 136   1        // [Timer Initialization]$
 137   1      
 138   1        // $[TMR2CN - Timer 2 Control]
 139   1        // [TMR2CN - Timer 2 Control]$
 140   1      
 141   1        // $[TMR2H - Timer 2 High Byte]
 142   1        // [TMR2H - Timer 2 High Byte]$
 143   1      
 144   1        // $[TMR2L - Timer 2 Low Byte]
 145   1        // [TMR2L - Timer 2 Low Byte]$
 146   1      
 147   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 148   1        /***********************************************************************
 149   1         - Timer 2 Reload High Byte = 0x88
 150   1         ***********************************************************************/
 151   1        TMR2RLH = (0x88 << TMR2RLH_TMR2RLH__SHIFT);
 152   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 153   1      
 154   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 155   1        /***********************************************************************
 156   1         - Timer 2 Reload Low Byte = 0x5F
 157   1         ***********************************************************************/
 158   1        TMR2RLL = (0x5F << TMR2RLL_TMR2RLL__SHIFT);
 159   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 160   1      
 161   1        // $[TMR2CN]
 162   1        /***********************************************************************
 163   1         - Start Timer 2 running
 164   1         ***********************************************************************/
 165   1        TMR2CN |= TMR2CN_TR2__RUN;
 166   1        // [TMR2CN]$
 167   1      
 168   1        // $[Timer Restoration]
 169   1        // Restore Timer Configuration
 170   1        TMR2CN |= TMR2CN_TR2_save;
 171   1        // [Timer Restoration]$
 172   1      
 173   1      }
 174          
 175          extern void
 176          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 177          {
 178   1        // $[CKCON - Clock Control]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:36:10 PAGE 4   

 179   1        /***********************************************************************
 180   1         - System clock divided by 12
 181   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 182   1         - Timer 2 high byte uses the clock defined by the T2XCLK bit in TMR2CN
 183   1         - Timer 2 low byte uses the system clock
 184   1         - Timer 3 high byte uses the clock defined by the T3XCLK bit in TMR3CN
 185   1         - Timer 3 low byte uses the clock defined by the T3XCLK bit in TMR3CN
 186   1         - Timer 1 uses the clock defined by the prescale field, SCA
 187   1         ***********************************************************************/
 188   1        CKCON = CKCON_SCA__SYSCLK_DIV_12 | CKCON_T0M__PRESCALE
 189   1            | CKCON_T2MH__EXTERNAL_CLOCK | CKCON_T2ML__SYSCLK
 190   1            | CKCON_T3MH__EXTERNAL_CLOCK | CKCON_T3ML__EXTERNAL_CLOCK
 191   1            | CKCON_T1M__PRESCALE;
 192   1        // [CKCON - Clock Control]$
 193   1      
 194   1        // $[TMOD - Timer 0/1 Mode]
 195   1        // [TMOD - Timer 0/1 Mode]$
 196   1      
 197   1        // $[TCON - Timer 0/1 Control]
 198   1        // [TCON - Timer 0/1 Control]$
 199   1      
 200   1      }
 201          
 202          extern void
 203          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 204          {
 205   1        // $[EIE1 - Extended Interrupt Enable 1]
 206   1        // [EIE1 - Extended Interrupt Enable 1]$
 207   1      
 208   1        // $[EIP1 - Extended Interrupt Priority 1]
 209   1        // [EIP1 - Extended Interrupt Priority 1]$
 210   1      
 211   1        // $[IE - Interrupt Enable]
 212   1        /***********************************************************************
 213   1         - Enable each interrupt according to its individual mask setting
 214   1         - Disable external interrupt 0
 215   1         - Disable external interrupt 1
 216   1         - Disable all SPI0 interrupts
 217   1         - Disable all Timer 0 interrupt
 218   1         - Disable all Timer 1 interrupt
 219   1         - Enable interrupt requests generated by the TF2L or TF2H flags
 220   1         - Disable UART0 interrupt
 221   1         ***********************************************************************/
 222   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 223   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED
 224   1            | IE_ES0__DISABLED;
 225   1        // [IE - Interrupt Enable]$
 226   1      
 227   1        // $[IP - Interrupt Priority]
 228   1        // [IP - Interrupt Priority]$
 229   1      
 230   1      }
 231          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    126    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:36:10 PAGE 5   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
