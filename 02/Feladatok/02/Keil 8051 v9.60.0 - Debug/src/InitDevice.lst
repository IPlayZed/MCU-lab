C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:03:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\mikrovez\02\0
                    -2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG
                    -=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\mikrovez\02\02\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.
                    -2.1//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/C8051F850/inc) PRINT
                    -(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_C8051F850_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          //==============================================================================
  17          // enter_DefaultMode_from_RESET
  18          //==============================================================================
  19          extern void
  20          enter_DefaultMode_from_RESET (void)
  21          {
  22   1        // $[Config Calls]
  23   1        WDT_0_enter_DefaultMode_from_RESET ();
  24   1        PORTS_1_enter_DefaultMode_from_RESET ();
  25   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  26   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  27   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  28   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  29   1        // [Config Calls]$
  30   1      
  31   1      }
  32          
  33          extern void
  34          WDT_0_enter_DefaultMode_from_RESET (void)
  35          {
  36   1        // $[Watchdog Timer Init Variable Declarations]
  37   1        uint32_t i;
  38   1        bool ea;
  39   1        // [Watchdog Timer Init Variable Declarations]$
  40   1      
  41   1        // $[WDTCN - Watchdog Timer Control]
  42   1        // Deprecated
  43   1        // [WDTCN - Watchdog Timer Control]$
  44   1      
  45   1        // $[WDTCN_2 - Watchdog Timer Control]
  46   1      
  47   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  48   1        WDTCN = 0xA5;
  49   1      
  50   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  51   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  52   1          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:03:52 PAGE 2   

  53   2            NOP ();
  54   2          }
  55   1      
  56   1        // Disable WDT
  57   1        ea = IE_EA;
  58   1        IE_EA = 0;
  59   1        WDTCN = 0xDE;
  60   1        WDTCN = 0xAD;
  61   1        IE_EA = ea;
  62   1      
  63   1        // [WDTCN_2 - Watchdog Timer Control]$
  64   1      
  65   1      }
  66          
  67          extern void
  68          PBCFG_0_enter_DefaultMode_from_RESET (void)
  69          {
  70   1        // $[XBR0 - Port I/O Crossbar 0]
  71   1        // [XBR0 - Port I/O Crossbar 0]$
  72   1      
  73   1        // $[XBR1 - Port I/O Crossbar 1]
  74   1        // [XBR1 - Port I/O Crossbar 1]$
  75   1      
  76   1        // $[XBR2 - Port I/O Crossbar 2]
  77   1        /***********************************************************************
  78   1         - Weak Pullups enabled 
  79   1         - Crossbar enabled
  80   1         ***********************************************************************/
  81   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  82   1        // [XBR2 - Port I/O Crossbar 2]$
  83   1      
  84   1        // $[PRTDRV - Port Drive Strength]
  85   1        // [PRTDRV - Port Drive Strength]$
  86   1      
  87   1      }
  88          
  89          extern void
  90          TIMER16_2_enter_DefaultMode_from_RESET (void)
  91          {
  92   1        // $[Timer Initialization]
  93   1        // Save Timer Configuration
  94   1        uint8_t TMR2CN_TR2_save;
  95   1        TMR2CN_TR2_save = TMR2CN & TMR2CN_TR2__BMASK;
  96   1        // Stop Timer
  97   1        TMR2CN &= ~(TMR2CN_TR2__BMASK);
  98   1        // [Timer Initialization]$
  99   1      
 100   1        // $[TMR2CN - Timer 2 Control]
 101   1        // [TMR2CN - Timer 2 Control]$
 102   1      
 103   1        // $[TMR2H - Timer 2 High Byte]
 104   1        // [TMR2H - Timer 2 High Byte]$
 105   1      
 106   1        // $[TMR2L - Timer 2 Low Byte]
 107   1        // [TMR2L - Timer 2 Low Byte]$
 108   1      
 109   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 110   1        /***********************************************************************
 111   1         - Timer 2 Reload High Byte = 0xCE
 112   1         ***********************************************************************/
 113   1        TMR2RLH = (0xCE << TMR2RLH_TMR2RLH__SHIFT);
 114   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 115   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:03:52 PAGE 3   

 116   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 117   1        /***********************************************************************
 118   1         - Timer 2 Reload Low Byte = 0x28
 119   1         ***********************************************************************/
 120   1        TMR2RLL = (0x28 << TMR2RLL_TMR2RLL__SHIFT);
 121   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 122   1      
 123   1        // $[TMR2CN]
 124   1        /***********************************************************************
 125   1         - Start Timer 2 running
 126   1         ***********************************************************************/
 127   1        TMR2CN |= TMR2CN_TR2__RUN;
 128   1        // [TMR2CN]$
 129   1      
 130   1        // $[Timer Restoration]
 131   1        // Restore Timer Configuration
 132   1        TMR2CN |= TMR2CN_TR2_save;
 133   1        // [Timer Restoration]$
 134   1      
 135   1      }
 136          
 137          extern void
 138          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 139          {
 140   1        // $[CKCON - Clock Control]
 141   1        // [CKCON - Clock Control]$
 142   1      
 143   1        // $[TMOD - Timer 0/1 Mode]
 144   1        // [TMOD - Timer 0/1 Mode]$
 145   1      
 146   1        // $[TCON - Timer 0/1 Control]
 147   1        // [TCON - Timer 0/1 Control]$
 148   1      
 149   1      }
 150          
 151          extern void
 152          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 153          {
 154   1        // $[EIE1 - Extended Interrupt Enable 1]
 155   1        // [EIE1 - Extended Interrupt Enable 1]$
 156   1      
 157   1        // $[EIP1 - Extended Interrupt Priority 1]
 158   1        // [EIP1 - Extended Interrupt Priority 1]$
 159   1      
 160   1        // $[IE - Interrupt Enable]
 161   1        /***********************************************************************
 162   1         - Enable each interrupt according to its individual mask setting
 163   1         - Disable external interrupt 0
 164   1         - Disable external interrupt 1
 165   1         - Disable all SPI0 interrupts
 166   1         - Disable all Timer 0 interrupt
 167   1         - Disable all Timer 1 interrupt
 168   1         - Enable interrupt requests generated by the TF2L or TF2H flags
 169   1         - Disable UART0 interrupt
 170   1         ***********************************************************************/
 171   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 172   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED
 173   1            | IE_ES0__DISABLED;
 174   1        // [IE - Interrupt Enable]$
 175   1      
 176   1        // $[IP - Interrupt Priority]
 177   1        // [IP - Interrupt Priority]$
 178   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/20/2021 19:03:52 PAGE 4   

 179   1      }
 180          
 181          extern void
 182          PORTS_1_enter_DefaultMode_from_RESET (void)
 183          {
 184   1        // $[P1 - Port 1 Pin Latch]
 185   1        // [P1 - Port 1 Pin Latch]$
 186   1      
 187   1        // $[P1MDOUT - Port 1 Output Mode]
 188   1        /***********************************************************************
 189   1         - P1.0 output is push-pull
 190   1         - P1.1 output is open-drain
 191   1         - P1.2 output is open-drain
 192   1         - P1.3 output is open-drain
 193   1         - P1.4 output is open-drain
 194   1         - P1.5 output is open-drain
 195   1         - P1.6 output is open-drain
 196   1         - P1.7 output is open-drain
 197   1         ***********************************************************************/
 198   1        P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 199   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN
 200   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 201   1            | P1MDOUT_B7__OPEN_DRAIN;
 202   1        // [P1MDOUT - Port 1 Output Mode]$
 203   1      
 204   1        // $[P1MDIN - Port 1 Input Mode]
 205   1        // [P1MDIN - Port 1 Input Mode]$
 206   1      
 207   1        // $[P1SKIP - Port 1 Skip]
 208   1        // [P1SKIP - Port 1 Skip]$
 209   1      
 210   1        // $[P1MASK - Port 1 Mask]
 211   1        // [P1MASK - Port 1 Mask]$
 212   1      
 213   1        // $[P1MAT - Port 1 Match]
 214   1        // [P1MAT - Port 1 Match]$
 215   1      
 216   1      }
 217          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    123    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
