C51 COMPILER V9.60.0.0   01_MAIN                                                           09/28/2021 14:55:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 01_MAIN
OBJECT MODULE PLACED IN .\src\01_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\miclab\04\01\
                    -src\01_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) I
                    -NTVECTOR(0X0000) INTPROMOTE INCDIR(C:\miclab\04\01\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//De
                    -vice/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\01
                    -_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\01_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/01_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          #define ADC0_DATA_MAX 1024
  18          #define PERCENTAGE 100
  19          
  20          typedef unsigned short ushort;
  21          typedef unsigned char uchar;
  22          
  23          //-----------------------------------------------------------------------------
  24          // SiLabs_Startup() Routine
  25          // ----------------------------------------------------------------------------
  26          // This function is called immediately after reset, before the initialization
  27          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  28          // useful place to disable the watchdog timer, which is enable by default
  29          // and may trigger before main() in some instances.
  30          //-----------------------------------------------------------------------------
  31          void SiLabs_Startup (void)
  32          {
  33   1        // $[SiLabs Startup]
  34   1        // [SiLabs Startup]$
  35   1      }
  36          
  37          
  38          ushort measureADC0()
  39          {
  40   1        ADC0CN0_ADINT = 0;
  41   1        ADC0CN0_ADBUSY = 1;
  42   1        while(!ADC0CN0_ADINT);
  43   1        return ADC0;
  44   1      }
  45          
  46          float getADC0DataInPercentage(ushort ADC0Data)
  47          {
  48   1        return ((float)ADC0Data/ADC0_DATA_MAX)*PERCENTAGE;
  49   1      }
  50          
  51          //-----------------------------------------------------------------------------
  52          // main() Routine
C51 COMPILER V9.60.0.0   01_MAIN                                                           09/28/2021 14:55:25 PAGE 2   

  53          // ----------------------------------------------------------------------------
  54          int main (void)
  55          {
  56   1        ushort ADC0Data = 0;
  57   1        float ADC0DataPercentage = 0.0;
  58   1      
  59   1        // Call hardware initialization routine
  60   1        enter_DefaultMode_from_RESET();
  61   1        
  62   1        while (1) 
  63   1        {
  64   2          // $[Generated Run-time code]
  65   2          // [Generated Run-time code]$
  66   2          ADC0Data = measureADC0();
  67   2          ADC0DataPercentage = getADC0DataInPercentage(ADC0Data);
  68   2        }                             
  69   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     77    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
