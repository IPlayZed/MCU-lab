C51 COMPILER V9.60.0.0   F3_MAIN                                                           11/09/2021 15:28:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE F3_MAIN
OBJECT MODULE PLACED IN .\src\f3_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hallgat
                    -o\SimplicityStudio\v5_workspace\f3\src\f3_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) 
                    -OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hallgato\SimplicityStudio\v5_workspace\f3
                    -\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si8051Base;C:/SiliconLabs/SimplicitySt
                    -udio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\f3_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJE
                    -CT(.\src\f3_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/f3_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          #define DECODER_A P1_B1
  18          #define DECODER_B P1_B2
  19          #define DECODER_C P0_B4
  20          
  21          #define DISP_OUT_ENABLE P0_B3
  22          
  23          #define MASK 1U
  24          
  25          #define LOW 0
  26          #define HIGH 1
  27          
  28          const uint16_t NUMBER = 1234;
  29          uint8_t i = 0;
  30          
  31          const uint8_t NUMBERS[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
  32          
  33          uint16_t adc_data = 0;
  34          
  35          void write_SPI0(uint8_t number) {
  36   1        //SPI0CN0_SPIF = HIGH;
  37   1        SPI0DAT = ~number;
  38   1        while(!SPI0CN0_SPIF);
  39   1        SPI0CN0_SPIF = LOW;
  40   1        DISP_OUT_ENABLE = HIGH;
  41   1        DISP_OUT_ENABLE = LOW;
  42   1      }
  43          
  44          void extractDigits(unsigned int num)
  45          {
  46   1          uint8_t dig;
  47   1          for(i = 0; i < 4; i++)
  48   1          {
  49   2              DECODER_A = 3-i & MASK;
  50   2              DECODER_B = 3-i >> 1 & MASK;
  51   2              DECODER_C = LOW;
C51 COMPILER V9.60.0.0   F3_MAIN                                                           11/09/2021 15:28:57 PAGE 2   

  52   2      
  53   2              dig = num%10;
  54   2      
  55   2              write_SPI0(NUMBERS[dig]);
  56   2      
  57   2              while(!TMR2CN0_TF2H);
  58   2              TMR2CN0_TF2H = LOW;
  59   2      
  60   2              num = num/10;
  61   2          }
  62   1      }
  63          
  64          
  65          //-----------------------------------------------------------------------------
  66          // SiLabs_Startup() Routine
  67          // ----------------------------------------------------------------------------
  68          // This function is called immediately after reset, before the initialization
  69          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  70          // useful place to disable the watchdog timer, which is enable by default
  71          // and may trigger before main() in some instances.
  72          //-----------------------------------------------------------------------------
  73          void SiLabs_Startup (void)
  74          {
  75   1        // $[SiLabs Startup]
  76   1        // [SiLabs Startup]$
  77   1      }
  78          
  79          //-----------------------------------------------------------------------------
  80          // main() Routine
  81          // ----------------------------------------------------------------------------
  82          int main (void)
  83          {
  84   1        // Call hardware initialization routine
  85   1        enter_DefaultMode_from_RESET();
  86   1        
  87   1        while (1) 
  88   1        {
  89   2          // $[Generated Run-time code]
  90   2          // [Generated Run-time code]$
  91   2          ADC0CN0_ADINT = LOW;
  92   2          ADC0CN0_ADBUSY = HIGH;
  93   2          while(!ADC0CN0_ADINT);
  94   2          adc_data = ADC0;
  95   2      
  96   2          extractDigits(adc_data);
  97   2        }                             
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    131    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
