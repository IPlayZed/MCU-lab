C51 COMPILER V9.60.0.0   F2_MAIN                                                           11/09/2021 15:16:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE F2_MAIN
OBJECT MODULE PLACED IN .\src\f2_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hallgat
                    -o\SimplicityStudio\v5_workspace\f2\src\f2_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) 
                    -OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hallgato\SimplicityStudio\v5_workspace\f2
                    -\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si8051Base;C:/SiliconLabs/SimplicitySt
                    -udio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\f2_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJE
                    -CT(.\src\f2_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/f2_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          #define DECODER_A P1_B1
  18          #define DECODER_B P1_B2
  19          #define DECODER_C P0_B4
  20          
  21          #define DISP_OUT_ENABLE P0_B3
  22          
  23          #define MASK 1U
  24          
  25          #define LOW 0
  26          #define HIGH 1
  27          
  28          const uint16_t NUMBER = 1234;
  29          uint8_t i = 0;
  30          
  31          const uint8_t NUMBERS[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
  32          
  33          //-----------------------------------------------------------------------------
  34          // SiLabs_Startup() Routine
  35          // ----------------------------------------------------------------------------
  36          // This function is called immediately after reset, before the initialization
  37          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  38          // useful place to disable the watchdog timer, which is enable by default
  39          // and may trigger before main() in some instances.
  40          //-----------------------------------------------------------------------------
  41          void SiLabs_Startup (void)
  42          {
  43   1        // $[SiLabs Startup]
  44   1        // [SiLabs Startup]$
  45   1      }
  46          
  47          void write_SPI0(uint8_t number) {
  48   1        //SPI0CN0_SPIF = HIGH;
  49   1        SPI0DAT = ~number;
  50   1        while(!SPI0CN0_SPIF);
  51   1        SPI0CN0_SPIF = LOW;
C51 COMPILER V9.60.0.0   F2_MAIN                                                           11/09/2021 15:16:06 PAGE 2   

  52   1        DISP_OUT_ENABLE = HIGH;
  53   1        DISP_OUT_ENABLE = LOW;
  54   1      }
  55          
  56          void extractDigits(unsigned int num)
  57          {
  58   1          uint8_t dig;
  59   1          for(i = 0; i < 4; i++)
  60   1          {
  61   2              DECODER_A = 3-i & MASK;
  62   2              DECODER_B = 3-i >> 1 & MASK;
  63   2              DECODER_C = LOW;
  64   2      
  65   2              dig = num%10;
  66   2      
  67   2              write_SPI0(NUMBERS[dig]);
  68   2      
  69   2              while(!TMR2CN0_TF2H);
  70   2              TMR2CN0_TF2H = LOW;
  71   2      
  72   2              num = num/10;
  73   2      
  74   2      
  75   2          }
  76   1      
  77   1      
  78   1      }
  79          
  80          
  81          //-----------------------------------------------------------------------------
  82          // main() Routine
  83          // ----------------------------------------------------------------------------
  84          int main (void)
  85          {
  86   1        // Call hardware initialization routine
  87   1        enter_DefaultMode_from_RESET();
  88   1        
  89   1        while (1) 
  90   1        {
  91   2          // $[Generated Run-time code]
  92   2          // [Generated Run-time code]$
  93   2      
  94   2          extractDigits(NUMBER);
  95   2        }                             
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    118    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
