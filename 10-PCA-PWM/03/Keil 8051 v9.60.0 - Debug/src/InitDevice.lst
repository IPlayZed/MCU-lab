C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\opt\simplicitystudio5\developer\toolchains\keil_8051\9.60\BIN\C51.exe /home/minef/git_clones/MCU
                    --lab/10-PWM/03/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED)
                    - DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/minef/git_clones/MCU-lab/10-PWM/03/inc;/opt/simplicitystudio5
                    -/developer/sdks/8051/v4.2.2//Device/shared/si8051Base;/opt/simplicitystudio5/developer/sdks/8051/v4.2.2//Device/EFM8BB1/
                    -inc) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_0_enter_DefaultMode_from_RESET ();
  28   1        PORTS_1_enter_DefaultMode_from_RESET ();
  29   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  30   1        ADC_0_enter_DefaultMode_from_RESET ();
  31   1        VREF_0_enter_DefaultMode_from_RESET ();
  32   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  33   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  34   1        PCA_0_enter_DefaultMode_from_RESET ();
  35   1        PCACH_0_enter_DefaultMode_from_RESET ();
  36   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  37   1        // [Config Calls]$
  38   1      
  39   1      }
  40          
  41          extern void
  42          WDT_0_enter_DefaultMode_from_RESET (void)
  43          {
  44   1        // $[Watchdog Timer Init Variable Declarations]
  45   1        uint32_t i;
  46   1        bool ea;
  47   1        // [Watchdog Timer Init Variable Declarations]$
  48   1      
  49   1        // $[WDTCN - Watchdog Timer Control]
  50   1        // Deprecated
  51   1        // [WDTCN - Watchdog Timer Control]$
  52   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 2   

  53   1        // $[WDTCN_2 - Watchdog Timer Control]
  54   1      
  55   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  56   1        WDTCN = 0xA5;
  57   1      
  58   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  59   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  60   1          {
  61   2            NOP ();
  62   2          }
  63   1      
  64   1        // Disable WDT
  65   1        ea = IE_EA;
  66   1        IE_EA = 0;
  67   1        WDTCN = 0xDE;
  68   1        WDTCN = 0xAD;
  69   1        IE_EA = ea;
  70   1      
  71   1        // [WDTCN_2 - Watchdog Timer Control]$
  72   1      
  73   1      }
  74          
  75          extern void
  76          PORTS_0_enter_DefaultMode_from_RESET (void)
  77          {
  78   1        // $[P0 - Port 0 Pin Latch]
  79   1        // [P0 - Port 0 Pin Latch]$
  80   1      
  81   1        // $[P0MDOUT - Port 0 Output Mode]
  82   1        // [P0MDOUT - Port 0 Output Mode]$
  83   1      
  84   1        // $[P0MDIN - Port 0 Input Mode]
  85   1        // [P0MDIN - Port 0 Input Mode]$
  86   1      
  87   1        // $[P0SKIP - Port 0 Skip]
  88   1        /***********************************************************************
  89   1         - P0.0 pin is skipped by the crossbar
  90   1         - P0.1 pin is skipped by the crossbar
  91   1         - P0.2 pin is skipped by the crossbar
  92   1         - P0.3 pin is skipped by the crossbar
  93   1         - P0.4 pin is skipped by the crossbar
  94   1         - P0.5 pin is skipped by the crossbar
  95   1         - P0.6 pin is skipped by the crossbar
  96   1         - P0.7 pin is skipped by the crossbar
  97   1         ***********************************************************************/
  98   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  99   1            | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 100   1            | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 101   1        // [P0SKIP - Port 0 Skip]$
 102   1      
 103   1        // $[P0MASK - Port 0 Mask]
 104   1        // [P0MASK - Port 0 Mask]$
 105   1      
 106   1        // $[P0MAT - Port 0 Match]
 107   1        // [P0MAT - Port 0 Match]$
 108   1      
 109   1      }
 110          
 111          extern void
 112          PORTS_1_enter_DefaultMode_from_RESET (void)
 113          {
 114   1        // $[P1 - Port 1 Pin Latch]
 115   1        // [P1 - Port 1 Pin Latch]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 3   

 116   1      
 117   1        // $[P1MDOUT - Port 1 Output Mode]
 118   1        // [P1MDOUT - Port 1 Output Mode]$
 119   1      
 120   1        // $[P1MDIN - Port 1 Input Mode]
 121   1        /***********************************************************************
 122   1         - P1.0 pin is configured for digital mode
 123   1         - P1.1 pin is configured for digital mode
 124   1         - P1.2 pin is configured for digital mode
 125   1         - P1.3 pin is configured for digital mode
 126   1         - P1.4 pin is configured for digital mode
 127   1         - P1.5 pin is configured for digital mode
 128   1         - P1.6 pin is configured for digital mode
 129   1         - P1.7 pin is configured for analog mode
 130   1         ***********************************************************************/
 131   1        P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 132   1            | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 133   1            | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 134   1        // [P1MDIN - Port 1 Input Mode]$
 135   1      
 136   1        // $[P1SKIP - Port 1 Skip]
 137   1        /***********************************************************************
 138   1         - P1.0 pin is skipped by the crossbar
 139   1         - P1.1 pin is skipped by the crossbar
 140   1         - P1.2 pin is skipped by the crossbar
 141   1         - P1.3 pin is skipped by the crossbar
 142   1         - P1.4 pin is not skipped by the crossbar
 143   1         - P1.5 pin is not skipped by the crossbar
 144   1         - P1.6 pin is not skipped by the crossbar
 145   1         - P1.7 pin is skipped by the crossbar
 146   1         ***********************************************************************/
 147   1        P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 148   1            | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 149   1            | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 150   1        // [P1SKIP - Port 1 Skip]$
 151   1      
 152   1        // $[P1MASK - Port 1 Mask]
 153   1        // [P1MASK - Port 1 Mask]$
 154   1      
 155   1        // $[P1MAT - Port 1 Match]
 156   1        // [P1MAT - Port 1 Match]$
 157   1      
 158   1      }
 159          
 160          extern void
 161          PBCFG_0_enter_DefaultMode_from_RESET (void)
 162          {
 163   1        // $[XBR2 - Port I/O Crossbar 2]
 164   1        /***********************************************************************
 165   1         - Weak Pullups enabled 
 166   1         - Crossbar enabled
 167   1         ***********************************************************************/
 168   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 169   1        // [XBR2 - Port I/O Crossbar 2]$
 170   1      
 171   1        // $[PRTDRV - Port Drive Strength]
 172   1        // [PRTDRV - Port Drive Strength]$
 173   1      
 174   1        // $[XBR0 - Port I/O Crossbar 0]
 175   1        // [XBR0 - Port I/O Crossbar 0]$
 176   1      
 177   1        // $[XBR1 - Port I/O Crossbar 1]
 178   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 4   

 179   1         - CEX0 routed to Port pin
 180   1         - ECI unavailable at Port pin
 181   1         - T0 unavailable at Port pin
 182   1         - T1 unavailable at Port pin
 183   1         - T2 unavailable at Port pin
 184   1         ***********************************************************************/
 185   1        XBR1 = XBR1_PCA0ME__CEX0 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 186   1            | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 187   1        // [XBR1 - Port I/O Crossbar 1]$
 188   1      
 189   1      }
 190          
 191          extern void
 192          TIMER01_0_enter_DefaultMode_from_RESET (void)
 193          {
 194   1        // $[Timer Initialization]
 195   1        //Save Timer Configuration
 196   1        uint8_t TCON_save;
 197   1        TCON_save = TCON;
 198   1        //Stop Timers
 199   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 200   1      
 201   1        // [Timer Initialization]$
 202   1      
 203   1        // $[TH0 - Timer 0 High Byte]
 204   1        // [TH0 - Timer 0 High Byte]$
 205   1      
 206   1        // $[TL0 - Timer 0 Low Byte]
 207   1        // [TL0 - Timer 0 Low Byte]$
 208   1      
 209   1        // $[TH1 - Timer 1 High Byte]
 210   1        // [TH1 - Timer 1 High Byte]$
 211   1      
 212   1        // $[TL1 - Timer 1 Low Byte]
 213   1        // [TL1 - Timer 1 Low Byte]$
 214   1      
 215   1        // $[Timer Restoration]
 216   1        //Restore Timer Configuration
 217   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 218   1      
 219   1        // [Timer Restoration]$
 220   1      
 221   1      }
 222          
 223          extern void
 224          TIMER16_2_enter_DefaultMode_from_RESET (void)
 225          {
 226   1        // $[Timer Initialization]
 227   1        // Save Timer Configuration
 228   1        uint8_t TMR2CN0_TR2_save;
 229   1        TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 230   1        // Stop Timer
 231   1        TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 232   1        // [Timer Initialization]$
 233   1      
 234   1        // $[TMR2CN0 - Timer 2 Control]
 235   1        // [TMR2CN0 - Timer 2 Control]$
 236   1      
 237   1        // $[TMR2H - Timer 2 High Byte]
 238   1        // [TMR2H - Timer 2 High Byte]$
 239   1      
 240   1        // $[TMR2L - Timer 2 Low Byte]
 241   1        // [TMR2L - Timer 2 Low Byte]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 5   

 242   1      
 243   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 244   1        /***********************************************************************
 245   1         - Timer 2 Reload High Byte = 0xFE
 246   1         ***********************************************************************/
 247   1        TMR2RLH = (0xFE << TMR2RLH_TMR2RLH__SHIFT);
 248   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 249   1      
 250   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 251   1        /***********************************************************************
 252   1         - Timer 2 Reload Low Byte = 0x02
 253   1         ***********************************************************************/
 254   1        TMR2RLL = (0x02 << TMR2RLL_TMR2RLL__SHIFT);
 255   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 256   1      
 257   1        // $[TMR2CN0]
 258   1        /***********************************************************************
 259   1         - Start Timer 2 running
 260   1         ***********************************************************************/
 261   1        TMR2CN0 |= TMR2CN0_TR2__RUN;
 262   1        // [TMR2CN0]$
 263   1      
 264   1        // $[Timer Restoration]
 265   1        // Restore Timer Configuration
 266   1        TMR2CN0 |= TMR2CN0_TR2_save;
 267   1        // [Timer Restoration]$
 268   1      
 269   1      }
 270          
 271          extern void
 272          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 273          {
 274   1        // $[CKCON0 - Clock Control 0]
 275   1        /***********************************************************************
 276   1         - System clock divided by 48
 277   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 278   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 279   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 280   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 281   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 282   1         - Timer 1 uses the clock defined by the prescale field, SCA
 283   1         ***********************************************************************/
 284   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 285   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 286   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 287   1            | CKCON0_T1M__PRESCALE;
 288   1        // [CKCON0 - Clock Control 0]$
 289   1      
 290   1        // $[TMOD - Timer 0/1 Mode]
 291   1        /***********************************************************************
 292   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 293   1         - Mode 0, 13-bit Counter/Timer
 294   1         - Timer Mode
 295   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 296   1         - Timer Mode
 297   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 298   1         ***********************************************************************/
 299   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 300   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 301   1        // [TMOD - Timer 0/1 Mode]$
 302   1      
 303   1        // $[TCON - Timer 0/1 Control]
 304   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 6   

 305   1         - Start Timer 0 running
 306   1         ***********************************************************************/
 307   1        TCON |= TCON_TR0__RUN;
 308   1        // [TCON - Timer 0/1 Control]$
 309   1      
 310   1      }
 311          
 312          extern void
 313          PCA_0_enter_DefaultMode_from_RESET (void)
 314          {
 315   1        // $[PCA Off]
 316   1        PCA0CN0_CR = PCA0CN0_CR__STOP;
 317   1        // [PCA Off]$
 318   1      
 319   1        // $[PCA0MD - PCA Mode]
 320   1        // [PCA0MD - PCA Mode]$
 321   1      
 322   1        // $[PCA0CENT - PCA Center Alignment Enable]
 323   1        // [PCA0CENT - PCA Center Alignment Enable]$
 324   1      
 325   1        // $[PCA0CLR - PCA Comparator Clear Control]
 326   1        // [PCA0CLR - PCA Comparator Clear Control]$
 327   1      
 328   1        // $[PCA0L - PCA Counter/Timer Low Byte]
 329   1        // [PCA0L - PCA Counter/Timer Low Byte]$
 330   1      
 331   1        // $[PCA0H - PCA Counter/Timer High Byte]
 332   1        // [PCA0H - PCA Counter/Timer High Byte]$
 333   1      
 334   1        // $[PCA0POL - PCA Output Polarity]
 335   1        // [PCA0POL - PCA Output Polarity]$
 336   1      
 337   1        // $[PCA0PWM - PCA PWM Configuration]
 338   1        // [PCA0PWM - PCA PWM Configuration]$
 339   1      
 340   1        // $[PCA On]
 341   1        PCA0CN0_CR = PCA0CN0_CR__RUN;
 342   1        // [PCA On]$
 343   1      
 344   1      }
 345          
 346          extern void
 347          PCACH_0_enter_DefaultMode_from_RESET (void)
 348          {
 349   1        // $[PCA0 Settings Save]
 350   1        // Select Capture/Compare register)
 351   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 352   1        // [PCA0 Settings Save]$
 353   1      
 354   1        // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 355   1        /***********************************************************************
 356   1         - Disable negative edge capture
 357   1         - Disable CCF0 interrupts
 358   1         - Disable match function
 359   1         - 8 to 11-bit PWM selected
 360   1         - Disable positive edge capture
 361   1         - Enable comparator function
 362   1         - Enable PWM function
 363   1         - Disable toggle function
 364   1         ***********************************************************************/
 365   1        PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 366   1            | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT | PCA0CPM0_CAPP__DISABLED
 367   1            | PCA0CPM0_ECOM__ENABLED | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 7   

 368   1        // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 369   1      
 370   1        // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 371   1        /***********************************************************************
 372   1         - PCA Channel 0 Capture Module Low Byte = 0xC0
 373   1         ***********************************************************************/
 374   1        PCA0CPL0 = (0xC0 << PCA0CPL0_PCA0CPL0__SHIFT);
 375   1        // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 376   1      
 377   1        // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 378   1        PCA0CPH0 = 0x00;
 379   1        // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 380   1      
 381   1        // $[Auto-reload]
 382   1        // [Auto-reload]$
 383   1      
 384   1        // $[PCA0 Settings Restore]
 385   1        // [PCA0 Settings Restore]$
 386   1      
 387   1      }
 388          
 389          extern void
 390          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 391          {
 392   1        // $[EIE1 - Extended Interrupt Enable 1]
 393   1        /***********************************************************************
 394   1         - Enable interrupt requests generated by the ADINT flag
 395   1         - Disable ADC0 Window Comparison interrupt
 396   1         - Disable CP0 interrupts
 397   1         - Disable CP1 interrupts
 398   1         - Disable all Port Match interrupts
 399   1         - Disable all PCA0 interrupts
 400   1         - Disable all SMB0 interrupts
 401   1         - Disable Timer 3 interrupts
 402   1         ***********************************************************************/
 403   1        EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 404   1            | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 405   1            | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 406   1        // [EIE1 - Extended Interrupt Enable 1]$
 407   1      
 408   1        // $[EIP1 - Extended Interrupt Priority 1]
 409   1        // [EIP1 - Extended Interrupt Priority 1]$
 410   1      
 411   1        // $[IE - Interrupt Enable]
 412   1        /***********************************************************************
 413   1         - Enable each interrupt according to its individual mask setting
 414   1         - Disable external interrupt 0
 415   1         - Disable external interrupt 1
 416   1         - Disable all SPI0 interrupts
 417   1         - Disable all Timer 0 interrupt
 418   1         - Disable all Timer 1 interrupt
 419   1         - Disable Timer 2 interrupt
 420   1         - Disable UART0 interrupt
 421   1         ***********************************************************************/
 422   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 423   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 424   1            | IE_ES0__DISABLED;
 425   1        // [IE - Interrupt Enable]$
 426   1      
 427   1        // $[IP - Interrupt Priority]
 428   1        // [IP - Interrupt Priority]$
 429   1      
 430   1      }
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 8   

 431          
 432          extern void
 433          ADC_0_enter_DefaultMode_from_RESET (void)
 434          {
 435   1        // $[ADC0CN1 - ADC0 Control 1]
 436   1        // [ADC0CN1 - ADC0 Control 1]$
 437   1      
 438   1        // $[ADC0MX - ADC0 Multiplexer Selection]
 439   1        /***********************************************************************
 440   1         - Select ADC0.15
 441   1         ***********************************************************************/
 442   1        ADC0MX = ADC0MX_ADC0MX__ADC0P15;
 443   1        // [ADC0MX - ADC0 Multiplexer Selection]$
 444   1      
 445   1        // $[ADC0CF - ADC0 Configuration]
 446   1        /***********************************************************************
 447   1         - SAR Clock Divider = 0x1F
 448   1         - ADC0 operates in 8-bit mode
 449   1         - The on-chip PGA gain is 1
 450   1         - Normal Track Mode
 451   1         ***********************************************************************/
 452   1        ADC0CF = (0x1F << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__8_BIT
 453   1            | ADC0CF_ADGN__GAIN_1 | ADC0CF_ADTM__TRACK_NORMAL;
 454   1        // [ADC0CF - ADC0 Configuration]$
 455   1      
 456   1        // $[ADC0AC - ADC0 Accumulator Configuration]
 457   1        /***********************************************************************
 458   1         - Left justified. No shifting applied
 459   1         - Disable 12-bit mode
 460   1         - ADC0H:ADC0L contain the result of the latest conversion when Burst
 461   1         Mode is disabled
 462   1         - Perform and Accumulate 1 conversion 
 463   1         ***********************************************************************/
 464   1        ADC0AC = ADC0AC_ADSJST__LEFT_NO_SHIFT | ADC0AC_AD12BE__12_BIT_DISABLED
 465   1            | ADC0AC_ADAE__ACC_DISABLED | ADC0AC_ADRPT__ACC_1;
 466   1        // [ADC0AC - ADC0 Accumulator Configuration]$
 467   1      
 468   1        // $[ADC0TK - ADC0 Burst Mode Track Time]
 469   1        // [ADC0TK - ADC0 Burst Mode Track Time]$
 470   1      
 471   1        // $[ADC0PWR - ADC0 Power Control]
 472   1        // [ADC0PWR - ADC0 Power Control]$
 473   1      
 474   1        // $[ADC0GTH - ADC0 Greater-Than High Byte]
 475   1        // [ADC0GTH - ADC0 Greater-Than High Byte]$
 476   1      
 477   1        // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 478   1        // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 479   1      
 480   1        // $[ADC0LTH - ADC0 Less-Than High Byte]
 481   1        // [ADC0LTH - ADC0 Less-Than High Byte]$
 482   1      
 483   1        // $[ADC0LTL - ADC0 Less-Than Low Byte]
 484   1        // [ADC0LTL - ADC0 Less-Than Low Byte]$
 485   1      
 486   1        // $[ADC0CN0 - ADC0 Control 0]
 487   1        /***********************************************************************
 488   1         - Enable ADC0 
 489   1         - ADC0 conversion initiated on overflow of Timer 2
 490   1         ***********************************************************************/
 491   1        ADC0CN0 &= ~ADC0CN0_ADCM__FMASK;
 492   1        ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_ADCM__TIMER2;
 493   1        // [ADC0CN0 - ADC0 Control 0]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/23/2021 14:40:10 PAGE 9   

 494   1      
 495   1      }
 496          
 497          extern void
 498          VREF_0_enter_DefaultMode_from_RESET (void)
 499          {
 500   1        // $[REF0CN - Voltage Reference Control]
 501   1        /***********************************************************************
 502   1         - Disable the Temperature Sensor
 503   1         - The ADC0 ground reference is the GND pin
 504   1         - The internal reference operates at 1.65 V nominal
 505   1         - The ADC0 voltage reference is the VDD pin
 506   1         ***********************************************************************/
 507   1        REF0CN = REF0CN_TEMPE__TEMP_DISABLED | REF0CN_GNDSL__GND_PIN
 508   1            | REF0CN_IREFLVL__1P65 | REF0CN_REFSL__VDD_PIN;
 509   1        // [REF0CN - Voltage Reference Control]$
 510   1      
 511   1      }
 512          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
