C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 14:41:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hallgat
                    -o\SimplicityStudio\v5_workspace\01\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(
                    -3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hallgato\SimplicityStudio\v5_workspace
                    -\01\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si8051Base;C:/SiliconLabs/Simplicit
                    -yStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65
                    -) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_0_enter_DefaultMode_from_RESET ();
  28   1        PORTS_1_enter_DefaultMode_from_RESET ();
  29   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  30   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  31   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  32   1        PCA_0_enter_DefaultMode_from_RESET ();
  33   1        PCACH_0_enter_DefaultMode_from_RESET ();
  34   1        // [Config Calls]$
  35   1      
  36   1      }
  37          
  38          extern void
  39          WDT_0_enter_DefaultMode_from_RESET (void)
  40          {
  41   1        // $[Watchdog Timer Init Variable Declarations]
  42   1        uint32_t i;
  43   1        bool ea;
  44   1        // [Watchdog Timer Init Variable Declarations]$
  45   1      
  46   1        // $[WDTCN - Watchdog Timer Control]
  47   1        // Deprecated
  48   1        // [WDTCN - Watchdog Timer Control]$
  49   1      
  50   1        // $[WDTCN_2 - Watchdog Timer Control]
  51   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 14:41:07 PAGE 2   

  52   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  53   1        WDTCN = 0xA5;
  54   1      
  55   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  56   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  57   1          {
  58   2            NOP ();
  59   2          }
  60   1      
  61   1        // Disable WDT
  62   1        ea = IE_EA;
  63   1        IE_EA = 0;
  64   1        WDTCN = 0xDE;
  65   1        WDTCN = 0xAD;
  66   1        IE_EA = ea;
  67   1      
  68   1        // [WDTCN_2 - Watchdog Timer Control]$
  69   1      
  70   1      }
  71          
  72          extern void
  73          PORTS_0_enter_DefaultMode_from_RESET (void)
  74          {
  75   1        // $[P0 - Port 0 Pin Latch]
  76   1        // [P0 - Port 0 Pin Latch]$
  77   1      
  78   1        // $[P0MDOUT - Port 0 Output Mode]
  79   1        // [P0MDOUT - Port 0 Output Mode]$
  80   1      
  81   1        // $[P0MDIN - Port 0 Input Mode]
  82   1        // [P0MDIN - Port 0 Input Mode]$
  83   1      
  84   1        // $[P0SKIP - Port 0 Skip]
  85   1        /***********************************************************************
  86   1         - P0.0 pin is skipped by the crossbar
  87   1         - P0.1 pin is skipped by the crossbar
  88   1         - P0.2 pin is skipped by the crossbar
  89   1         - P0.3 pin is skipped by the crossbar
  90   1         - P0.4 pin is skipped by the crossbar
  91   1         - P0.5 pin is skipped by the crossbar
  92   1         - P0.6 pin is skipped by the crossbar
  93   1         - P0.7 pin is skipped by the crossbar
  94   1         ***********************************************************************/
  95   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  96   1            | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
  97   1            | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
  98   1        // [P0SKIP - Port 0 Skip]$
  99   1      
 100   1        // $[P0MASK - Port 0 Mask]
 101   1        // [P0MASK - Port 0 Mask]$
 102   1      
 103   1        // $[P0MAT - Port 0 Match]
 104   1        // [P0MAT - Port 0 Match]$
 105   1      
 106   1      }
 107          
 108          extern void
 109          PORTS_1_enter_DefaultMode_from_RESET (void)
 110          {
 111   1        // $[P1 - Port 1 Pin Latch]
 112   1        // [P1 - Port 1 Pin Latch]$
 113   1      
 114   1        // $[P1MDOUT - Port 1 Output Mode]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 14:41:07 PAGE 3   

 115   1        // [P1MDOUT - Port 1 Output Mode]$
 116   1      
 117   1        // $[P1MDIN - Port 1 Input Mode]
 118   1        // [P1MDIN - Port 1 Input Mode]$
 119   1      
 120   1        // $[P1SKIP - Port 1 Skip]
 121   1        /***********************************************************************
 122   1         - P1.0 pin is skipped by the crossbar
 123   1         - P1.1 pin is skipped by the crossbar
 124   1         - P1.2 pin is skipped by the crossbar
 125   1         - P1.3 pin is skipped by the crossbar
 126   1         - P1.4 pin is not skipped by the crossbar
 127   1         - P1.5 pin is not skipped by the crossbar
 128   1         - P1.6 pin is not skipped by the crossbar
 129   1         - P1.7 pin is not skipped by the crossbar
 130   1         ***********************************************************************/
 131   1        P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 132   1            | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 133   1            | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 134   1        // [P1SKIP - Port 1 Skip]$
 135   1      
 136   1        // $[P1MASK - Port 1 Mask]
 137   1        // [P1MASK - Port 1 Mask]$
 138   1      
 139   1        // $[P1MAT - Port 1 Match]
 140   1        // [P1MAT - Port 1 Match]$
 141   1      
 142   1      }
 143          
 144          extern void
 145          PBCFG_0_enter_DefaultMode_from_RESET (void)
 146          {
 147   1        // $[XBR2 - Port I/O Crossbar 2]
 148   1        /***********************************************************************
 149   1         - Weak Pullups enabled 
 150   1         - Crossbar enabled
 151   1         ***********************************************************************/
 152   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 153   1        // [XBR2 - Port I/O Crossbar 2]$
 154   1      
 155   1        // $[PRTDRV - Port Drive Strength]
 156   1        // [PRTDRV - Port Drive Strength]$
 157   1      
 158   1        // $[XBR0 - Port I/O Crossbar 0]
 159   1        // [XBR0 - Port I/O Crossbar 0]$
 160   1      
 161   1        // $[XBR1 - Port I/O Crossbar 1]
 162   1        /***********************************************************************
 163   1         - CEX0 routed to Port pin
 164   1         - ECI unavailable at Port pin
 165   1         - T0 unavailable at Port pin
 166   1         - T1 unavailable at Port pin
 167   1         - T2 unavailable at Port pin
 168   1         ***********************************************************************/
 169   1        XBR1 = XBR1_PCA0ME__CEX0 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 170   1            | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 171   1        // [XBR1 - Port I/O Crossbar 1]$
 172   1      
 173   1      }
 174          
 175          extern void
 176          TIMER01_0_enter_DefaultMode_from_RESET (void)
 177          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 14:41:07 PAGE 4   

 178   1        // $[Timer Initialization]
 179   1        //Save Timer Configuration
 180   1        uint8_t TCON_save;
 181   1        TCON_save = TCON;
 182   1        //Stop Timers
 183   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 184   1      
 185   1        // [Timer Initialization]$
 186   1      
 187   1        // $[TH0 - Timer 0 High Byte]
 188   1        /***********************************************************************
 189   1         - Timer 0 High Byte = 0x07
 190   1         ***********************************************************************/
 191   1        TH0 = (0x07 << TH0_TH0__SHIFT);
 192   1        // [TH0 - Timer 0 High Byte]$
 193   1      
 194   1        // $[TL0 - Timer 0 Low Byte]
 195   1        // [TL0 - Timer 0 Low Byte]$
 196   1      
 197   1        // $[TH1 - Timer 1 High Byte]
 198   1        // [TH1 - Timer 1 High Byte]$
 199   1      
 200   1        // $[TL1 - Timer 1 Low Byte]
 201   1        // [TL1 - Timer 1 Low Byte]$
 202   1      
 203   1        // $[Timer Restoration]
 204   1        //Restore Timer Configuration
 205   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 206   1      
 207   1        // [Timer Restoration]$
 208   1      
 209   1      }
 210          
 211          extern void
 212          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 213          {
 214   1        // $[CKCON0 - Clock Control 0]
 215   1        /***********************************************************************
 216   1         - System clock divided by 48
 217   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 218   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 219   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 220   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 221   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 222   1         - Timer 1 uses the clock defined by the prescale field, SCA
 223   1         ***********************************************************************/
 224   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 225   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 226   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 227   1            | CKCON0_T1M__PRESCALE;
 228   1        // [CKCON0 - Clock Control 0]$
 229   1      
 230   1        // $[TMOD - Timer 0/1 Mode]
 231   1        /***********************************************************************
 232   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 233   1         - Mode 0, 13-bit Counter/Timer
 234   1         - Timer Mode
 235   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 236   1         - Timer Mode
 237   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 238   1         ***********************************************************************/
 239   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 240   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 14:41:07 PAGE 5   

 241   1        // [TMOD - Timer 0/1 Mode]$
 242   1      
 243   1        // $[TCON - Timer 0/1 Control]
 244   1        /***********************************************************************
 245   1         - Start Timer 0 running
 246   1         ***********************************************************************/
 247   1        TCON |= TCON_TR0__RUN;
 248   1        // [TCON - Timer 0/1 Control]$
 249   1      
 250   1      }
 251          
 252          extern void
 253          PCA_0_enter_DefaultMode_from_RESET (void)
 254          {
 255   1        // $[PCA Off]
 256   1        PCA0CN0_CR = PCA0CN0_CR__STOP;
 257   1        // [PCA Off]$
 258   1      
 259   1        // $[PCA0MD - PCA Mode]
 260   1        /***********************************************************************
 261   1         - PCA continues to function normally while the system controller is in
 262   1         Idle Mode
 263   1         - Disable the CF interrupt
 264   1         - Timer 0 overflow
 265   1         ***********************************************************************/
 266   1        PCA0MD = PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED
 267   1            | PCA0MD_CPS__T0_OVERFLOW;
 268   1        // [PCA0MD - PCA Mode]$
 269   1      
 270   1        // $[PCA0CENT - PCA Center Alignment Enable]
 271   1        // [PCA0CENT - PCA Center Alignment Enable]$
 272   1      
 273   1        // $[PCA0CLR - PCA Comparator Clear Control]
 274   1        // [PCA0CLR - PCA Comparator Clear Control]$
 275   1      
 276   1        // $[PCA0L - PCA Counter/Timer Low Byte]
 277   1        // [PCA0L - PCA Counter/Timer Low Byte]$
 278   1      
 279   1        // $[PCA0H - PCA Counter/Timer High Byte]
 280   1        // [PCA0H - PCA Counter/Timer High Byte]$
 281   1      
 282   1        // $[PCA0POL - PCA Output Polarity]
 283   1        // [PCA0POL - PCA Output Polarity]$
 284   1      
 285   1        // $[PCA0PWM - PCA PWM Configuration]
 286   1        // [PCA0PWM - PCA PWM Configuration]$
 287   1      
 288   1        // $[PCA On]
 289   1        PCA0CN0_CR = PCA0CN0_CR__RUN;
 290   1        // [PCA On]$
 291   1      
 292   1      }
 293          
 294          extern void
 295          PCACH_0_enter_DefaultMode_from_RESET (void)
 296          {
 297   1        // $[PCA0 Settings Save]
 298   1        // Select Capture/Compare register)
 299   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 300   1        // [PCA0 Settings Save]$
 301   1      
 302   1        // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 303   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 14:41:07 PAGE 6   

 304   1         - Disable negative edge capture
 305   1         - Disable CCF0 interrupts
 306   1         - Disable match function
 307   1         - 8 to 11-bit PWM selected
 308   1         - Disable positive edge capture
 309   1         - Enable comparator function
 310   1         - Enable PWM function
 311   1         - Disable toggle function
 312   1         ***********************************************************************/
 313   1        PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 314   1            | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT | PCA0CPM0_CAPP__DISABLED
 315   1            | PCA0CPM0_ECOM__ENABLED | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 316   1        // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 317   1      
 318   1        // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 319   1        /***********************************************************************
 320   1         - PCA Channel 0 Capture Module Low Byte = 0x40
 321   1         ***********************************************************************/
 322   1        PCA0CPL0 = (0x40 << PCA0CPL0_PCA0CPL0__SHIFT);
 323   1        // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 324   1      
 325   1        // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 326   1        /***********************************************************************
 327   1         - PCA Channel 0 Capture Module High Byte = 0x40
 328   1         ***********************************************************************/
 329   1        PCA0CPH0 = (0x40 << PCA0CPH0_PCA0CPH0__SHIFT);
 330   1        // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 331   1      
 332   1        // $[Auto-reload]
 333   1        // [Auto-reload]$
 334   1      
 335   1        // $[PCA0 Settings Restore]
 336   1        // [PCA0 Settings Restore]$
 337   1      
 338   1      }
 339          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    162    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
