C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/12/2021 15:40:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\miclab\06\02\
                    -src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1
                    -) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\miclab\06\02\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1/
                    -/Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src
                    -\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_0_enter_DefaultMode_from_RESET ();
  28   1        PORTS_1_enter_DefaultMode_from_RESET ();
  29   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  30   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  31   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  32   1        // [Config Calls]$
  33   1      
  34   1      }
  35          
  36          extern void
  37          WDT_0_enter_DefaultMode_from_RESET (void)
  38          {
  39   1        // $[Watchdog Timer Init Variable Declarations]
  40   1        uint32_t i;
  41   1        bool ea;
  42   1        // [Watchdog Timer Init Variable Declarations]$
  43   1      
  44   1        // $[WDTCN - Watchdog Timer Control]
  45   1        // Deprecated
  46   1        // [WDTCN - Watchdog Timer Control]$
  47   1      
  48   1        // $[WDTCN_2 - Watchdog Timer Control]
  49   1      
  50   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  51   1        WDTCN = 0xA5;
  52   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/12/2021 15:40:03 PAGE 2   

  53   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  54   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  55   1          {
  56   2            NOP ();
  57   2          }
  58   1      
  59   1        // Disable WDT
  60   1        ea = IE_EA;
  61   1        IE_EA = 0;
  62   1        WDTCN = 0xDE;
  63   1        WDTCN = 0xAD;
  64   1        IE_EA = ea;
  65   1      
  66   1        // [WDTCN_2 - Watchdog Timer Control]$
  67   1      
  68   1      }
  69          
  70          extern void
  71          PORTS_0_enter_DefaultMode_from_RESET (void)
  72          {
  73   1        // $[P0 - Port 0 Pin Latch]
  74   1        // [P0 - Port 0 Pin Latch]$
  75   1      
  76   1        // $[P0MDOUT - Port 0 Output Mode]
  77   1        /***********************************************************************
  78   1         - P0.0 output is push-pull
  79   1         - P0.1 output is open-drain
  80   1         - P0.2 output is push-pull
  81   1         - P0.3 output is push-pull
  82   1         - P0.4 output is push-pull
  83   1         - P0.5 output is open-drain
  84   1         - P0.6 output is open-drain
  85   1         - P0.7 output is open-drain
  86   1         ***********************************************************************/
  87   1        P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__OPEN_DRAIN
  88   1            | P0MDOUT_B2__PUSH_PULL | P0MDOUT_B3__PUSH_PULL | P0MDOUT_B4__PUSH_PULL
  89   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
  90   1            | P0MDOUT_B7__OPEN_DRAIN;
  91   1        // [P0MDOUT - Port 0 Output Mode]$
  92   1      
  93   1        // $[P0MDIN - Port 0 Input Mode]
  94   1        // [P0MDIN - Port 0 Input Mode]$
  95   1      
  96   1        // $[P0SKIP - Port 0 Skip]
  97   1        // [P0SKIP - Port 0 Skip]$
  98   1      
  99   1        // $[P0MASK - Port 0 Mask]
 100   1        // [P0MASK - Port 0 Mask]$
 101   1      
 102   1        // $[P0MAT - Port 0 Match]
 103   1        // [P0MAT - Port 0 Match]$
 104   1      
 105   1      }
 106          
 107          extern void
 108          PORTS_1_enter_DefaultMode_from_RESET (void)
 109          {
 110   1        // $[P1 - Port 1 Pin Latch]
 111   1        // [P1 - Port 1 Pin Latch]$
 112   1      
 113   1        // $[P1MDOUT - Port 1 Output Mode]
 114   1        /***********************************************************************
 115   1         - P1.0 output is open-drain
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/12/2021 15:40:03 PAGE 3   

 116   1         - P1.1 output is push-pull
 117   1         - P1.2 output is push-pull
 118   1         - P1.3 output is open-drain
 119   1         - P1.4 output is open-drain
 120   1         - P1.5 output is open-drain
 121   1         - P1.6 output is open-drain
 122   1         - P1.7 output is open-drain
 123   1         ***********************************************************************/
 124   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__PUSH_PULL
 125   1            | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN
 126   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 127   1            | P1MDOUT_B7__OPEN_DRAIN;
 128   1        // [P1MDOUT - Port 1 Output Mode]$
 129   1      
 130   1        // $[P1MDIN - Port 1 Input Mode]
 131   1        // [P1MDIN - Port 1 Input Mode]$
 132   1      
 133   1        // $[P1SKIP - Port 1 Skip]
 134   1        // [P1SKIP - Port 1 Skip]$
 135   1      
 136   1        // $[P1MASK - Port 1 Mask]
 137   1        // [P1MASK - Port 1 Mask]$
 138   1      
 139   1        // $[P1MAT - Port 1 Match]
 140   1        // [P1MAT - Port 1 Match]$
 141   1      
 142   1      }
 143          
 144          extern void
 145          PBCFG_0_enter_DefaultMode_from_RESET (void)
 146          {
 147   1        // $[XBR2 - Port I/O Crossbar 2]
 148   1        /***********************************************************************
 149   1         - Weak Pullups enabled 
 150   1         - Crossbar enabled
 151   1         ***********************************************************************/
 152   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 153   1        // [XBR2 - Port I/O Crossbar 2]$
 154   1      
 155   1        // $[PRTDRV - Port Drive Strength]
 156   1        // [PRTDRV - Port Drive Strength]$
 157   1      
 158   1        // $[XBR0 - Port I/O Crossbar 0]
 159   1        // [XBR0 - Port I/O Crossbar 0]$
 160   1      
 161   1        // $[XBR1 - Port I/O Crossbar 1]
 162   1        // [XBR1 - Port I/O Crossbar 1]$
 163   1      
 164   1      }
 165          
 166          extern void
 167          TIMER16_2_enter_DefaultMode_from_RESET (void)
 168          {
 169   1        // $[Timer Initialization]
 170   1        // Save Timer Configuration
 171   1        uint8_t TMR2CN0_TR2_save;
 172   1        TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 173   1        // Stop Timer
 174   1        TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 175   1        // [Timer Initialization]$
 176   1      
 177   1        // $[TMR2CN0 - Timer 2 Control]
 178   1        // [TMR2CN0 - Timer 2 Control]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/12/2021 15:40:03 PAGE 4   

 179   1      
 180   1        // $[TMR2H - Timer 2 High Byte]
 181   1        // [TMR2H - Timer 2 High Byte]$
 182   1      
 183   1        // $[TMR2L - Timer 2 Low Byte]
 184   1        // [TMR2L - Timer 2 Low Byte]$
 185   1      
 186   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 187   1        /***********************************************************************
 188   1         - Timer 2 Reload High Byte = 0x38
 189   1         ***********************************************************************/
 190   1        TMR2RLH = (0x38 << TMR2RLH_TMR2RLH__SHIFT);
 191   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 192   1      
 193   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 194   1        /***********************************************************************
 195   1         - Timer 2 Reload Low Byte = 0x9E
 196   1         ***********************************************************************/
 197   1        TMR2RLL = (0x9E << TMR2RLL_TMR2RLL__SHIFT);
 198   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 199   1      
 200   1        // $[TMR2CN0]
 201   1        /***********************************************************************
 202   1         - Start Timer 2 running
 203   1         ***********************************************************************/
 204   1        TMR2CN0 |= TMR2CN0_TR2__RUN;
 205   1        // [TMR2CN0]$
 206   1      
 207   1        // $[Timer Restoration]
 208   1        // Restore Timer Configuration
 209   1        TMR2CN0 |= TMR2CN0_TR2_save;
 210   1        // [Timer Restoration]$
 211   1      
 212   1      }
 213          
 214          extern void
 215          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 216          {
 217   1        // $[EIE1 - Extended Interrupt Enable 1]
 218   1        // [EIE1 - Extended Interrupt Enable 1]$
 219   1      
 220   1        // $[EIP1 - Extended Interrupt Priority 1]
 221   1        // [EIP1 - Extended Interrupt Priority 1]$
 222   1      
 223   1        // $[IE - Interrupt Enable]
 224   1        /***********************************************************************
 225   1         - Enable each interrupt according to its individual mask setting
 226   1         - Disable external interrupt 0
 227   1         - Disable external interrupt 1
 228   1         - Disable all SPI0 interrupts
 229   1         - Disable all Timer 0 interrupt
 230   1         - Disable all Timer 1 interrupt
 231   1         - Enable interrupt requests generated by the TF2L or TF2H flags
 232   1         - Disable UART0 interrupt
 233   1         ***********************************************************************/
 234   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 235   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED
 236   1            | IE_ES0__DISABLED;
 237   1        // [IE - Interrupt Enable]$
 238   1      
 239   1        // $[IP - Interrupt Priority]
 240   1        // [IP - Interrupt Priority]$
 241   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/12/2021 15:40:03 PAGE 5   

 242   1      }
 243          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    126    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
