C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/09/2021 15:28:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hallgat
                    -o\SimplicityStudio\v5_workspace\f3\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(
                    -3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hallgato\SimplicityStudio\v5_workspace
                    -\f3\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si8051Base;C:/SiliconLabs/Simplicit
                    -yStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65
                    -) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_0_enter_DefaultMode_from_RESET ();
  28   1        PORTS_1_enter_DefaultMode_from_RESET ();
  29   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  30   1        ADC_0_enter_DefaultMode_from_RESET ();
  31   1        VREF_0_enter_DefaultMode_from_RESET ();
  32   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  33   1        TIMER16_3_enter_DefaultMode_from_RESET ();
  34   1        SPI_0_enter_DefaultMode_from_RESET ();
  35   1        // [Config Calls]$
  36   1      
  37   1      }
  38          
  39          extern void
  40          WDT_0_enter_DefaultMode_from_RESET (void)
  41          {
  42   1        // $[Watchdog Timer Init Variable Declarations]
  43   1        uint32_t i;
  44   1        bool ea;
  45   1        // [Watchdog Timer Init Variable Declarations]$
  46   1      
  47   1        // $[WDTCN - Watchdog Timer Control]
  48   1        // Deprecated
  49   1        // [WDTCN - Watchdog Timer Control]$
  50   1      
  51   1        // $[WDTCN_2 - Watchdog Timer Control]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/09/2021 15:28:57 PAGE 2   

  52   1      
  53   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  54   1        WDTCN = 0xA5;
  55   1      
  56   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  57   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  58   1          {
  59   2            NOP ();
  60   2          }
  61   1      
  62   1        // Disable WDT
  63   1        ea = IE_EA;
  64   1        IE_EA = 0;
  65   1        WDTCN = 0xDE;
  66   1        WDTCN = 0xAD;
  67   1        IE_EA = ea;
  68   1      
  69   1        // [WDTCN_2 - Watchdog Timer Control]$
  70   1      
  71   1      }
  72          
  73          extern void
  74          PORTS_0_enter_DefaultMode_from_RESET (void)
  75          {
  76   1        // $[P0 - Port 0 Pin Latch]
  77   1        // [P0 - Port 0 Pin Latch]$
  78   1      
  79   1        // $[P0MDOUT - Port 0 Output Mode]
  80   1        /***********************************************************************
  81   1         - P0.0 output is push-pull
  82   1         - P0.1 output is open-drain
  83   1         - P0.2 output is push-pull
  84   1         - P0.3 output is push-pull
  85   1         - P0.4 output is push-pull
  86   1         - P0.5 output is open-drain
  87   1         - P0.6 output is open-drain
  88   1         - P0.7 output is open-drain
  89   1         ***********************************************************************/
  90   1        P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__OPEN_DRAIN
  91   1            | P0MDOUT_B2__PUSH_PULL | P0MDOUT_B3__PUSH_PULL | P0MDOUT_B4__PUSH_PULL
  92   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
  93   1            | P0MDOUT_B7__OPEN_DRAIN;
  94   1        // [P0MDOUT - Port 0 Output Mode]$
  95   1      
  96   1        // $[P0MDIN - Port 0 Input Mode]
  97   1        // [P0MDIN - Port 0 Input Mode]$
  98   1      
  99   1        // $[P0SKIP - Port 0 Skip]
 100   1        // [P0SKIP - Port 0 Skip]$
 101   1      
 102   1        // $[P0MASK - Port 0 Mask]
 103   1        // [P0MASK - Port 0 Mask]$
 104   1      
 105   1        // $[P0MAT - Port 0 Match]
 106   1        // [P0MAT - Port 0 Match]$
 107   1      
 108   1      }
 109          
 110          extern void
 111          PORTS_1_enter_DefaultMode_from_RESET (void)
 112          {
 113   1        // $[P1 - Port 1 Pin Latch]
 114   1        // [P1 - Port 1 Pin Latch]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/09/2021 15:28:57 PAGE 3   

 115   1      
 116   1        // $[P1MDOUT - Port 1 Output Mode]
 117   1        /***********************************************************************
 118   1         - P1.0 output is open-drain
 119   1         - P1.1 output is push-pull
 120   1         - P1.2 output is push-pull
 121   1         - P1.3 output is open-drain
 122   1         - P1.4 output is open-drain
 123   1         - P1.5 output is open-drain
 124   1         - P1.6 output is open-drain
 125   1         - P1.7 output is open-drain
 126   1         ***********************************************************************/
 127   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__PUSH_PULL
 128   1            | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN
 129   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 130   1            | P1MDOUT_B7__OPEN_DRAIN;
 131   1        // [P1MDOUT - Port 1 Output Mode]$
 132   1      
 133   1        // $[P1MDIN - Port 1 Input Mode]
 134   1        /***********************************************************************
 135   1         - P1.0 pin is configured for digital mode
 136   1         - P1.1 pin is configured for digital mode
 137   1         - P1.2 pin is configured for digital mode
 138   1         - P1.3 pin is configured for digital mode
 139   1         - P1.4 pin is configured for digital mode
 140   1         - P1.5 pin is configured for digital mode
 141   1         - P1.6 pin is configured for digital mode
 142   1         - P1.7 pin is configured for analog mode
 143   1         ***********************************************************************/
 144   1        P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 145   1            | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 146   1            | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 147   1        // [P1MDIN - Port 1 Input Mode]$
 148   1      
 149   1        // $[P1SKIP - Port 1 Skip]
 150   1        /***********************************************************************
 151   1         - P1.0 pin is not skipped by the crossbar
 152   1         - P1.1 pin is not skipped by the crossbar
 153   1         - P1.2 pin is not skipped by the crossbar
 154   1         - P1.3 pin is not skipped by the crossbar
 155   1         - P1.4 pin is not skipped by the crossbar
 156   1         - P1.5 pin is not skipped by the crossbar
 157   1         - P1.6 pin is not skipped by the crossbar
 158   1         - P1.7 pin is skipped by the crossbar
 159   1         ***********************************************************************/
 160   1        P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 161   1            | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED
 162   1            | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 163   1        // [P1SKIP - Port 1 Skip]$
 164   1      
 165   1        // $[P1MASK - Port 1 Mask]
 166   1        // [P1MASK - Port 1 Mask]$
 167   1      
 168   1        // $[P1MAT - Port 1 Match]
 169   1        // [P1MAT - Port 1 Match]$
 170   1      
 171   1      }
 172          
 173          extern void
 174          PBCFG_0_enter_DefaultMode_from_RESET (void)
 175          {
 176   1        // $[XBR2 - Port I/O Crossbar 2]
 177   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/09/2021 15:28:57 PAGE 4   

 178   1         - Weak Pullups enabled 
 179   1         - Crossbar enabled
 180   1         ***********************************************************************/
 181   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 182   1        // [XBR2 - Port I/O Crossbar 2]$
 183   1      
 184   1        // $[PRTDRV - Port Drive Strength]
 185   1        // [PRTDRV - Port Drive Strength]$
 186   1      
 187   1        // $[XBR0 - Port I/O Crossbar 0]
 188   1        /***********************************************************************
 189   1         - UART I/O unavailable at Port pin
 190   1         - SPI I/O routed to Port pins
 191   1         - SMBus 0 I/O unavailable at Port pins
 192   1         - CP0 unavailable at Port pin
 193   1         - Asynchronous CP0 unavailable at Port pin
 194   1         - CP1 unavailable at Port pin
 195   1         - Asynchronous CP1 unavailable at Port pin
 196   1         - SYSCLK unavailable at Port pin
 197   1         ***********************************************************************/
 198   1        XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 199   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 200   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 201   1        // [XBR0 - Port I/O Crossbar 0]$
 202   1      
 203   1        // $[XBR1 - Port I/O Crossbar 1]
 204   1        // [XBR1 - Port I/O Crossbar 1]$
 205   1      
 206   1      }
 207          
 208          extern void
 209          ADC_0_enter_DefaultMode_from_RESET (void)
 210          {
 211   1        // $[ADC0CN1 - ADC0 Control 1]
 212   1        // [ADC0CN1 - ADC0 Control 1]$
 213   1      
 214   1        // $[ADC0MX - ADC0 Multiplexer Selection]
 215   1        /***********************************************************************
 216   1         - Select ADC0.15
 217   1         ***********************************************************************/
 218   1        ADC0MX = ADC0MX_ADC0MX__ADC0P15;
 219   1        // [ADC0MX - ADC0 Multiplexer Selection]$
 220   1      
 221   1        // $[ADC0CF - ADC0 Configuration]
 222   1        /***********************************************************************
 223   1         - SAR Clock Divider = 0x1F
 224   1         - ADC0 operates in 10-bit or 12-bit mode 
 225   1         - The on-chip PGA gain is 1
 226   1         - Normal Track Mode
 227   1         ***********************************************************************/
 228   1        ADC0CF = (0x1F << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL
 229   1            | ADC0CF_ADGN__GAIN_1 | ADC0CF_ADTM__TRACK_NORMAL;
 230   1        // [ADC0CF - ADC0 Configuration]$
 231   1      
 232   1        // $[ADC0AC - ADC0 Accumulator Configuration]
 233   1        // [ADC0AC - ADC0 Accumulator Configuration]$
 234   1      
 235   1        // $[ADC0TK - ADC0 Burst Mode Track Time]
 236   1        // [ADC0TK - ADC0 Burst Mode Track Time]$
 237   1      
 238   1        // $[ADC0PWR - ADC0 Power Control]
 239   1        // [ADC0PWR - ADC0 Power Control]$
 240   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/09/2021 15:28:57 PAGE 5   

 241   1        // $[ADC0GTH - ADC0 Greater-Than High Byte]
 242   1        // [ADC0GTH - ADC0 Greater-Than High Byte]$
 243   1      
 244   1        // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 245   1        // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 246   1      
 247   1        // $[ADC0LTH - ADC0 Less-Than High Byte]
 248   1        // [ADC0LTH - ADC0 Less-Than High Byte]$
 249   1      
 250   1        // $[ADC0LTL - ADC0 Less-Than Low Byte]
 251   1        // [ADC0LTL - ADC0 Less-Than Low Byte]$
 252   1      
 253   1        // $[ADC0CN0 - ADC0 Control 0]
 254   1        /***********************************************************************
 255   1         - Enable ADC0 
 256   1         ***********************************************************************/
 257   1        ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 258   1        // [ADC0CN0 - ADC0 Control 0]$
 259   1      
 260   1      }
 261          
 262          extern void
 263          TIMER16_2_enter_DefaultMode_from_RESET (void)
 264          {
 265   1        // $[Timer Initialization]
 266   1        // Save Timer Configuration
 267   1        uint8_t TMR2CN0_TR2_save;
 268   1        TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 269   1        // Stop Timer
 270   1        TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 271   1        // [Timer Initialization]$
 272   1      
 273   1        // $[TMR2CN0 - Timer 2 Control]
 274   1        // [TMR2CN0 - Timer 2 Control]$
 275   1      
 276   1        // $[TMR2H - Timer 2 High Byte]
 277   1        // [TMR2H - Timer 2 High Byte]$
 278   1      
 279   1        // $[TMR2L - Timer 2 Low Byte]
 280   1        // [TMR2L - Timer 2 Low Byte]$
 281   1      
 282   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 283   1        /***********************************************************************
 284   1         - Timer 2 Reload High Byte = 0xFE
 285   1         ***********************************************************************/
 286   1        TMR2RLH = (0xFE << TMR2RLH_TMR2RLH__SHIFT);
 287   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 288   1      
 289   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 290   1        /***********************************************************************
 291   1         - Timer 2 Reload Low Byte = 0xEC
 292   1         ***********************************************************************/
 293   1        TMR2RLL = (0xEC << TMR2RLL_TMR2RLL__SHIFT);
 294   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 295   1      
 296   1        // $[TMR2CN0]
 297   1        /***********************************************************************
 298   1         - Start Timer 2 running
 299   1         ***********************************************************************/
 300   1        TMR2CN0 |= TMR2CN0_TR2__RUN;
 301   1        // [TMR2CN0]$
 302   1      
 303   1        // $[Timer Restoration]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/09/2021 15:28:57 PAGE 6   

 304   1        // Restore Timer Configuration
 305   1        TMR2CN0 |= TMR2CN0_TR2_save;
 306   1        // [Timer Restoration]$
 307   1      
 308   1      }
 309          
 310          extern void
 311          SPI_0_enter_DefaultMode_from_RESET (void)
 312          {
 313   1        // $[SPI0CKR - SPI0 Clock Rate]
 314   1        // [SPI0CKR - SPI0 Clock Rate]$
 315   1      
 316   1        // $[SPI0CFG - SPI0 Configuration]
 317   1        /***********************************************************************
 318   1         - Data centered on second edge of SCK period
 319   1         - SCK line high in idle state
 320   1         - Enable master mode. Operate as a master
 321   1         ***********************************************************************/
 322   1        SPI0CFG |= SPI0CFG_CKPHA__DATA_CENTERED_SECOND | SPI0CFG_CKPOL__IDLE_HIGH
 323   1            | SPI0CFG_MSTEN__MASTER_ENABLED;
 324   1        // [SPI0CFG - SPI0 Configuration]$
 325   1      
 326   1        // $[SPI0CN0 - SPI0 Control]
 327   1        /***********************************************************************
 328   1         - Enable the SPI module
 329   1         - 3-Wire Slave or 3-Wire Master Mode
 330   1         ***********************************************************************/
 331   1        SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 332   1        SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 333   1        // [SPI0CN0 - SPI0 Control]$
 334   1      
 335   1      }
 336          
 337          extern void
 338          VREF_0_enter_DefaultMode_from_RESET (void)
 339          {
 340   1        // $[REF0CN - Voltage Reference Control]
 341   1        /***********************************************************************
 342   1         - Disable the Temperature Sensor
 343   1         - The ADC0 ground reference is the GND pin
 344   1         - The internal reference operates at 1.65 V nominal
 345   1         - The ADC0 voltage reference is the VDD pin
 346   1         ***********************************************************************/
 347   1        REF0CN = REF0CN_TEMPE__TEMP_DISABLED | REF0CN_GNDSL__GND_PIN
 348   1            | REF0CN_IREFLVL__1P65 | REF0CN_REFSL__VDD_PIN;
 349   1        // [REF0CN - Voltage Reference Control]$
 350   1      
 351   1      }
 352          
 353          extern void
 354          TIMER16_3_enter_DefaultMode_from_RESET (void)
 355          {
 356   1        // $[Timer Initialization]
 357   1        // Save Timer Configuration
 358   1        uint8_t TMR3CN0_TR3_save;
 359   1        TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 360   1        // Stop Timer
 361   1        TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 362   1        // [Timer Initialization]$
 363   1      
 364   1        // $[TMR3CN0 - Timer 3 Control]
 365   1        // [TMR3CN0 - Timer 3 Control]$
 366   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/09/2021 15:28:57 PAGE 7   

 367   1        // $[TMR3H - Timer 3 High Byte]
 368   1        // [TMR3H - Timer 3 High Byte]$
 369   1      
 370   1        // $[TMR3L - Timer 3 Low Byte]
 371   1        // [TMR3L - Timer 3 Low Byte]$
 372   1      
 373   1        // $[TMR3RLH - Timer 3 Reload High Byte]
 374   1        // [TMR3RLH - Timer 3 Reload High Byte]$
 375   1      
 376   1        // $[TMR3RLL - Timer 3 Reload Low Byte]
 377   1        // [TMR3RLL - Timer 3 Reload Low Byte]$
 378   1      
 379   1        // $[TMR3CN0]
 380   1        // [TMR3CN0]$
 381   1      
 382   1        // $[Timer Restoration]
 383   1        // Restore Timer Configuration
 384   1        TMR3CN0 |= TMR3CN0_TR3_save;
 385   1        // [Timer Restoration]$
 386   1      
 387   1      }
 388          
 389          extern void
 390          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 391          {
 392   1      
 393   1      }
 394          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    175    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
