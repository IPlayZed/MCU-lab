C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/02/2021 15:19:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hallgat
                    -o\SimplicityStudio\v5_workspace\02\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(
                    -3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hallgato\SimplicityStudio\v5_workspace
                    -\02\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si8051Base;C:/SiliconLabs/Simplicit
                    -yStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65
                    -) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  28   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  29   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  30   1        UART_0_enter_DefaultMode_from_RESET ();
  31   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  32   1        // [Config Calls]$
  33   1      
  34   1      }
  35          
  36          extern void
  37          WDT_0_enter_DefaultMode_from_RESET (void)
  38          {
  39   1        // $[Watchdog Timer Init Variable Declarations]
  40   1        uint32_t i;
  41   1        bool ea;
  42   1        // [Watchdog Timer Init Variable Declarations]$
  43   1      
  44   1        // $[WDTCN - Watchdog Timer Control]
  45   1        // Deprecated
  46   1        // [WDTCN - Watchdog Timer Control]$
  47   1      
  48   1        // $[WDTCN_2 - Watchdog Timer Control]
  49   1      
  50   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  51   1        WDTCN = 0xA5;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/02/2021 15:19:13 PAGE 2   

  52   1      
  53   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  54   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  55   1          {
  56   2            NOP ();
  57   2          }
  58   1      
  59   1        // Disable WDT
  60   1        ea = IE_EA;
  61   1        IE_EA = 0;
  62   1        WDTCN = 0xDE;
  63   1        WDTCN = 0xAD;
  64   1        IE_EA = ea;
  65   1      
  66   1        // [WDTCN_2 - Watchdog Timer Control]$
  67   1      
  68   1      }
  69          
  70          extern void
  71          PBCFG_0_enter_DefaultMode_from_RESET (void)
  72          {
  73   1        // $[XBR2 - Port I/O Crossbar 2]
  74   1        /***********************************************************************
  75   1         - Weak Pullups enabled 
  76   1         - Crossbar enabled
  77   1         ***********************************************************************/
  78   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  79   1        // [XBR2 - Port I/O Crossbar 2]$
  80   1      
  81   1        // $[PRTDRV - Port Drive Strength]
  82   1        // [PRTDRV - Port Drive Strength]$
  83   1      
  84   1        // $[XBR0 - Port I/O Crossbar 0]
  85   1        /***********************************************************************
  86   1         - UART TX, RX routed to Port pins P0.4 and P0.5
  87   1         - SPI I/O unavailable at Port pins
  88   1         - SMBus 0 I/O unavailable at Port pins
  89   1         - CP0 unavailable at Port pin
  90   1         - Asynchronous CP0 unavailable at Port pin
  91   1         - CP1 unavailable at Port pin
  92   1         - Asynchronous CP1 unavailable at Port pin
  93   1         - SYSCLK unavailable at Port pin
  94   1         ***********************************************************************/
  95   1        XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
  96   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
  97   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
  98   1        // [XBR0 - Port I/O Crossbar 0]$
  99   1      
 100   1        // $[XBR1 - Port I/O Crossbar 1]
 101   1        // [XBR1 - Port I/O Crossbar 1]$
 102   1      
 103   1      }
 104          
 105          extern void
 106          CLOCK_0_enter_DefaultMode_from_RESET (void)
 107          {
 108   1        // $[CLKSEL - Clock Select]
 109   1        /***********************************************************************
 110   1         - Clock derived from the Internal High-Frequency Oscillator
 111   1         - SYSCLK is equal to selected clock source divided by 1
 112   1         ***********************************************************************/
 113   1        CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 114   1        // [CLKSEL - Clock Select]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/02/2021 15:19:13 PAGE 3   

 115   1      
 116   1      }
 117          
 118          extern void
 119          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 120          {
 121   1        // $[CKCON0 - Clock Control 0]
 122   1        /***********************************************************************
 123   1         - System clock divided by 12
 124   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 125   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 126   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 127   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 128   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 129   1         - Timer 1 uses the system clock
 130   1         ***********************************************************************/
 131   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 132   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 133   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 134   1            | CKCON0_T1M__SYSCLK;
 135   1        // [CKCON0 - Clock Control 0]$
 136   1      
 137   1        // $[TMOD - Timer 0/1 Mode]
 138   1        /***********************************************************************
 139   1         - Mode 0, 13-bit Counter/Timer
 140   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 141   1         - Timer Mode
 142   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 143   1         - Timer Mode
 144   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 145   1         ***********************************************************************/
 146   1        TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 147   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 148   1        // [TMOD - Timer 0/1 Mode]$
 149   1      
 150   1        // $[TCON - Timer 0/1 Control]
 151   1        /***********************************************************************
 152   1         - Start Timer 1 running
 153   1         ***********************************************************************/
 154   1        TCON |= TCON_TR1__RUN;
 155   1        // [TCON - Timer 0/1 Control]$
 156   1      
 157   1      }
 158          
 159          extern void
 160          UART_0_enter_DefaultMode_from_RESET (void)
 161          {
 162   1        // $[SCON0 - UART0 Serial Port Control]
 163   1        /***********************************************************************
 164   1         - UART0 reception enabled
 165   1         ***********************************************************************/
 166   1        SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 167   1        // [SCON0 - UART0 Serial Port Control]$
 168   1      
 169   1      }
 170          
 171          extern void
 172          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 173          {
 174   1        // $[EIE1 - Extended Interrupt Enable 1]
 175   1        // [EIE1 - Extended Interrupt Enable 1]$
 176   1      
 177   1        // $[EIP1 - Extended Interrupt Priority 1]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/02/2021 15:19:13 PAGE 4   

 178   1        // [EIP1 - Extended Interrupt Priority 1]$
 179   1      
 180   1        // $[IE - Interrupt Enable]
 181   1        /***********************************************************************
 182   1         - Enable each interrupt according to its individual mask setting
 183   1         - Disable external interrupt 0
 184   1         - Disable external interrupt 1
 185   1         - Disable all SPI0 interrupts
 186   1         - Disable all Timer 0 interrupt
 187   1         - Disable all Timer 1 interrupt
 188   1         - Disable Timer 2 interrupt
 189   1         - Enable UART0 interrupt
 190   1         ***********************************************************************/
 191   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 192   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 193   1            | IE_ES0__ENABLED;
 194   1        // [IE - Interrupt Enable]$
 195   1      
 196   1        // $[IP - Interrupt Priority]
 197   1        // [IP - Interrupt Priority]$
 198   1      
 199   1      }
 200          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    120    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
