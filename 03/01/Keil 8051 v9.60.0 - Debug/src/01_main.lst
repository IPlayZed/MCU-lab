C51 COMPILER V9.60.0.0   01_MAIN                                                           09/21/2021 15:18:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 01_MAIN
OBJECT MODULE PLACED IN .\src\01_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\minef\S
                    -implicityStudio\v5_workspace\01\src\01_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPT
                    -IMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\minef\SimplicityStudio\v5_workspace\01\inc;C
                    -:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v
                    -5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\01_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\s
                    -rc\01_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/01_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          #include "ButtonModes.h"
  15          #include "IncludesBasics.h"
  16          
  17          extern uint8_t rattle_counter;
  18          volatile char delayer = 0;
  19          
  20          BTN_MODE BTN0_mode = BTN0_MODE_5HZ;
  21          
  22          // $[Generated Includes]
  23          // [Generated Includes]$
  24          
  25          //-----------------------------------------------------------------------------
  26          // SiLabs_Startup() Routine
  27          // ----------------------------------------------------------------------------
  28          // This function is called immediately after reset, before the initialization
  29          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  30          // useful place to disable the watchdog timer, which is enable by default
  31          // and may trigger before main() in some instances.
  32          //-----------------------------------------------------------------------------
  33          void SiLabs_Startup (void)
  34          {
  35   1        // $[SiLabs Startup]
  36   1        // [SiLabs Startup]$
  37   1      }
  38          
  39          //-----------------------------------------------------------------------------
  40          // main() Routine
  41          // ----------------------------------------------------------------------------
  42          int main (void)
  43          {
  44   1        uint8_t rattle_counter_ticks = RATTLE_COUNTER_5HZ;
  45   1      
  46   1        // Call hardware initialization routine
  47   1        enter_DefaultMode_from_RESET();
  48   1      
  49   1        while (1) 
  50   1        {
  51   2          // $[Generated Run-time code]
C51 COMPILER V9.60.0.0   01_MAIN                                                           09/21/2021 15:18:49 PAGE 2   

  52   2          // [Generated Run-time code]$
  53   2      
  54   2          // Perrgésmentesítés és timer reload freq. változtatás.
  55   2          if(BTN0 == ON) {
  56   3              rattle_counter = 0;
  57   3              while(rattle_counter <= rattle_counter_ticks);
  58   3              if (BTN0_mode == BTN0_MODE_100HZ) BTN0_mode = BTN0_MODE_5HZ;
  59   3              else BTN0_mode++;
  60   3              BTN0_set_TIMER01_0_TH0_val(BTN0_mode);
  61   3              while(BTN0 == ON);
  62   3              while(rattle_counter < rattle_counter_ticks);
  63   3          }
  64   2      
  65   2          // Perrgésmentesítési idő megváltoztatása.
  66   2          switch (BTN0_mode) {
  67   3            case BTN0_MODE_5HZ:
  68   3              rattle_counter_ticks = RATTLE_COUNTER_5HZ;
  69   3              break;
  70   3      
  71   3            case BTN0_MODE_20HZ:
  72   3              rattle_counter_ticks = RATTLE_COUNTER_20HZ;
  73   3              break;
  74   3      
  75   3            case BTN0_MODE_100HZ:
  76   3              rattle_counter_ticks = RATTLE_COUNTER_100HZ;
  77   3              break;
  78   3      
  79   3          }
  80   2        }                             
  81   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     74    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
